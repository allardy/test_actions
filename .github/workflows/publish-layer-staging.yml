name: Publish Layers Staging

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'layers/ffmpeg/**'
      - 'layers/canvas/**'
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  publish-lambda-layers:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine layers to process
        id: determine-layers
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Get all layers for manual trigger, excluding `bot-layer`
            CHANGED_LAYERS=$(ls -d layers/* | grep -v '/bot-layer' | xargs -n 1 basename)
          else
            # Get changed layers for push events, excluding `bot-layer`
            CHANGED_LAYERS=$(git diff --name-only HEAD~1 HEAD | grep '^layers/' | cut -d'/' -f2 | grep -v '^bot-layer$' | uniq || true)
          fi

          echo "CHANGED_LAYERS=$(echo \"$CHANGED_LAYERS\" | tr '\n' ' ')" >> $GITHUB_ENV
          echo "Determined layers: $(echo \"$CHANGED_LAYERS\" | tr '\n' ' ')"

      # - uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: arn:aws:iam::236194216641:role/actions/deploy/layer_skynet
      #     aws-region: us-east-1

      - name: Build and publish layers
        if: env.CHANGED_LAYERS != ''
        run: |
          for LAYER in $CHANGED_LAYERS; do
            echo "Processing layer: $LAYER"
            LAYER_PATH="layers/$LAYER"

            # Build the layer using Docker
            docker build -t "$LAYER" "$LAYER_PATH"

            # # Save the layer package as a ZIP file
            # docker run --rm "$LAYER" cat /opt/layer.zip > "$LAYER_PATH/layer.zip"

            # # Save the layer on S3
            # aws s3 cp "$LAYER_PATH/layer.zip" s3://botpress-lambda-layers/layers/staging/$LAYER.zip

            # # Publish the layer
            # aws lambda publish-layer-version \
            #   --layer-name "$LAYER" \
            #   --description "Updated version of $LAYER" \
            #   --content S3Bucket=botpress-lambda-layers,S3Key=layers/staging/$LAYER.zip \
            #   --compatible-runtimes "nodejs20.x"
          done
