name: Merge Master to Prod

on:
  workflow_dispatch: # Triggered manually

jobs:
  merge-master-to-prod:
    name: Merge Master into Prod
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required for pushing commits

    steps:
      # Checkout the `prod` branch
      - name: Checkout Prod Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: prod

      # Configure Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Fetch `master` branch
      - name: Fetch Master Branch
        run: git fetch origin master

      # Attempt to Merge Master into Prod
      - name: Attempt Merge Master to Prod
        id: merge-master-to-prod
        run: |
          echo "Attempting to merge master into prod..."
          git merge --no-ff origin/master -m "Merge master into prod" || exit 1

      # If Merge Fails, Sync Prod to Master and Retry
      - name: Handle Merge Conflict
        if: failure()
        run: |
          echo "Merge failed. Syncing prod to master and retrying..."
          git checkout master
          git pull origin master
          git merge --no-ff origin/prod -m "Merge prod into master [skip ci]"
          git push origin master

          echo "Retrying merge from master to prod..."
          git checkout prod
          git merge --no-ff origin/master -m "Retry: Merge master into prod"
          git push origin prod || exit 1

      # Validate Final Sync
      - name: Validate Final Sync
        run: |
          git fetch origin prod
          if ! git merge-base --is-ancestor origin/master origin/prod; then
            echo "Prod is still not fully updated with master. Attempting forced sync as a last resort..."
            git reset --hard origin/master
            git push origin prod --force
          fi

      - name: Add Final Commit to Prod
        if: always()
        run: |
          echo "Ensuring prod branch has a merge commit for history clarity..."
          git checkout prod
          git commit --allow-empty -m "Staging deployed to production [skip ci]"
          git push origin prod

      # Final Verification
      - name: Final Verification
        run: |
          git fetch origin prod
          if ! git merge-base --is-ancestor origin/master origin/prod; then
            echo "Prod is still not up-to-date after force sync. Manual resolution required."
            exit 1
          else
            echo "Prod successfully updated with master."
          fi
